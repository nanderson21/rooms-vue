#------------------------------------------------------------------------------
# File:         csXMP.config
#
# Description:  custom creative.space XMP tags
#
# Status:       Test
#
# Namespaces:
#               csMF - Media Fabric
#               csMM - Media Managment
#
#               cs
#               we could cp csMM as /usr/local/bin/.ExifTool_config, but for now,
#               cs-xmp is using the -config option
#
#                   exiftool -config csMM ...
#
#               For detailed information on the definition of tag tables and
#               tag information hashes, see lib/Image/ExifTool/README.
#               See also https://exiftool.org/config.html for more features of config files
#------------------------------------------------------------------------------

# NOTE: All tag names used in the following tables are case sensitive.

# The %Image::ExifTool::UserDefined hash defines new tags to be added
# to existing tables.
%Image::ExifTool::UserDefined = (
    # All EXIF tags are added to the Main table, and WriteGroup is used to
    # specify where the tag is written (default is ExifIFD if not specified):

    # add new XMP namespaces to the Main XMP table:
    'Image::ExifTool::XMP::Main' => {

        csMF => { # <-- must be the same as the NAMESPACE prefix
            SubDirectory => {
                TagTable => 'Image::ExifTool::UserDefined::csMF',
                # (defined below)
            },
        },

        csMM => { # <-- must be the same as the NAMESPACE prefix
            SubDirectory => {
                TagTable => 'Image::ExifTool::UserDefined::csMM',
                # (defined below)
            },
        },
    },

);

#
# csMF = creative.space Media Fabric XMP namespace
#
%Image::ExifTool::UserDefined::csMF = (
    GROUPS => { 0 => 'XMP', 1 => 'XMP-csMF', 2 => 'Image' },
    NAMESPACE => { 'csMF' => 'http://creative.space/csMF/1.0/' },
    WRITABLE => 'string', # (default to string-type tags)

    # Media Fabric - structured XMP tag
    Media_Fabric => {
        # the "Struct" entry defines the structure fields
        Struct => {
            Content_ID => { Writable => 'string' },
            Media_ID => { Writable => 'string' },
            Checksum => { Writable => 'string' },
            Global_File_ID => { Writable => 'string' },
            Local_File_ID => { Writable => 'string' },
            File_ID => { Writable => 'string' },
            S3_ID => { Writable => 'string' },
            Premier_ID => { Writable => 'string' },
            AvidMC_ID => { Writable => 'string' },
            FCPX_ID => { Writable => 'string' },
            Resolve_ID => { Writable => 'string' },
            Version_ID => { Writable => 'string' },
            State_ID => { Writable => 'string' },
            Instance => { Writable => 'string' },
            FrameIO_ID => { Writable => 'string' },
        },
        List => 'Seq', # structures may also be elements of a list
    },
);

# This is under construction
#
# csMM = creative.space Media Management XMP namespace
#
# This table is referenced through a SubDirectory tag definition
# in the %Image::ExifTool::UserDefined definition above.
# The namespace prefix for these tags is 'csMM', which corresponds to
# an ExifTool family 1 group name of 'XMP-csMM'.
%Image::ExifTool::UserDefined::csMM = (
    GROUPS => { 0 => 'XMP', 1 => 'XMP-csMM', 2 => 'Image' },
    NAMESPACE => { 'csMM' => 'http://creative.space/csMM/1.0/' },
    WRITABLE => 'string', # (default to string-type tags)

    # - example structured XMP tag
    Media_Management => {
        # the "Struct" entry defines the structure fields
        Struct => {
            Document_ID => { Writable => 'string' },
            Derived_From => { Writable => 'string' },
            Instance_ID => { Writable => 'string' },
            Original_Document_ID => { Writable => 'string' },
            Created_By => { Writable => 'string' },

            # test of a nested structure...
            Things => {
                List => 'Bag',
                Struct => {
                    NAMESPACE => { thing => 'http://x.y.z/thing/' },
                    What  => { },
                    Where => { },
                },
            },
        },
        List => 'Seq', # structures may also be elements of a list
    },

    # stuff left over from the example, still playing with...
    # Example 8.  XMP-csMM:NewXMPcsMMTag1 (an alternate-language tag)
    # - replace "NewXMPcsMMTag1" with your own tag name (eg. "MyTag")
    NewXMPcsMMTag1 => { Writable => 'lang-alt' },
    # Example 9.  XMP-csMM:NewXMPcsMMTag2 (a string tag in the Author category)
    NewXMPcsMMTag2 => { Groups => { 2 => 'Author' } },
    # Example 10.  XMP-csMM:NewXMPcsMMTag3 (an unordered List-type tag)
    NewXMPcsMMTag3 => { List => 'Bag' },
    # Example 11.  XMP-csMM:NewXMPcsMMStruct (a structured tag)
);

# this is from the example - haven't found the mentioned documentaion yet...
# Specify default ExifTool option values
# (see the Options function documentation for available options)
%Image::ExifTool::UserDefined::Options = (
    CoordFormat => '%.6f',  # change default GPS coordinate format
    Duplicates => 1,        # make -a default for the exiftool app (allow extraction of duplicate tags)
    GeoMaxHDOP => 4,        # ignore GPS fixes with HDOP > 4
    RequestAll => 3,        # request additional tags not normally generated
);

#------------------------------------------------------------------------------
1;  #end
